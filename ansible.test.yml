---
- hosts: local
  vars:
    home:          "{{ ansible_env.HOME }}"
    test_dir:      "{{ home }}/github/parse_environ"
    test_data_dir: "{{ home }}/github/parse_environ/.test"
    sources:
      - parse_environ_get_next_kv.test
      - parse_environ_load_proc_env.test
    sources_with_arg:
      - { exe: parse_environ_load_proc_env.test, args: ./.test/environ }
  tasks:
    - name: remove dest
      file:
        path: "{{ test_dir }}"
        state: absent
    - name: create dest
      file:
        path: "{{ test_dir }}"
        state: directory
        mode:  "0755"
    - name: copy files
      copy:
        src: "{{ item }}"
        dest: "{{ test_dir }}"
      loop:
        - ./parse_environ.h
        - ./parse_environ_get_next_kv.test.c
        - ./parse_environ_load_proc_env.test.c
        - ./CMakeLists.txt
    - name: cmake
      shell: cmake .
      args:
        chdir: "{{ test_dir }}"
    - name: cmake build
      shell: cmake --build .
      args:
        chdir: "{{ test_dir }}"
    - name: ctest
      shell: ctest
      args:
        chdir: "{{ test_dir }}"
    - name: compile
      shell: gcc -g -O0 --coverage -fprofile-arcs -ftest-coverage -o {{ item }} {{ item }}.c
      args:
        chdir: "{{ test_dir }}"
      loop: "{{ sources }}"
    - name: remove test dir
      file:
        path: "{{ test_data_dir }}"
        state: absent
    - name: create test dir
      file:
        path: "{{ test_data_dir }}"
        state: directory
        mode: "0755"
    - name: create test environ
      copy:
        content: "{{ item.value }}"
        dest: "{{ test_data_dir }}/{{ item.name }}"
      loop:
        - { name: environ, value: "LANG=en_US.UTF-8\0TERM=screen\0"     }
        - { name: env2,    value: "LANG=en_US.UTF-8\0SHELL=/bin/bash\0" }
    - name: test
      shell: ./{{ item }}
      args:
        chdir: "{{ test_dir }}"
      loop: "{{ sources }}"
    - name: test with arg
      shell: ./{{ item.exe }} {{ item.args }}
      args:
        chdir: "{{ test_dir }}"
      loop: "{{ sources_with_arg }}"
    - name: gcov
      shell: gcov *.c
      args:
        chdir: "{{ test_dir }}"
      register: gcov
    - debug:
        var: gcov.stdout_lines
